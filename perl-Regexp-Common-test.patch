--- Regexp-Common-2.113/t/test_squares.t.orig	2003-03-23 22:41:55.000000000 +0100
+++ Regexp-Common-2.113/t/test_squares.t	2004-05-22 18:47:40.120278090 +0200
@@ -11,7 +11,9 @@
 local $^W = 0;
 
 my $MAX_INT32 = 0x7FFFFFFF;
-my $MAX_INT   = $Config {use64bitint} ? eval "0x7FFFFFFFFFFFFFFF" : 0x7FFFFFFF;
+# cannot use 0x7FFFFFFFFFFFFFFF as double precision is only 53 bits
+# (and doubles are used by ** and float == operators)
+my $MAX_INT   = $Config {use64bitint} ? eval "0x001FFFFFFFFFFFFF" : 0x7FFFFFFF;
 
 local $^W = 1;
 
@@ -49,7 +51,7 @@
 my %d;
 sub _3 {{
     my $x = int rand $MAX_INT;
-    redo if $d {$x} ++ || $x != (int sqrt ($x) ** 2);
+    redo if $d {$x} ++ || $x == ((int sqrt ($x)) ** 2);
     sprintf "%d" => $x;
 }}
 
--- Regexp-Common-2.115/t/zip/spain.t.orig	2004-06-09 23:32:28.000000000 +0200
+++ Regexp-Common-2.115/t/zip/spain.t	2004-06-19 20:28:59.386752760 +0200
@@ -175,7 +175,7 @@
 
     # Wrong provinces.
     for (1 .. FAIL) {
-        my $x = _ 2; redo if $x < 52;
+        my $x = _ 2; redo if $x <= 52;
         my $y = _ 3;
         redo if $cache {"$x$y"};
         push @failures => "$x$y";
